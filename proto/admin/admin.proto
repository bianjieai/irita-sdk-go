syntax = "proto3";
package iritamod.admin;

import "gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/irita-sdk-go/modules/admin";
option (gogoproto.goproto_getters_all) = false;

// Role is a type alias that represents a proposal status as a byte
enum Role {
    option (gogoproto.enum_stringer) = true;
    option (gogoproto.goproto_enum_stringer) = false;
    option (gogoproto.goproto_enum_prefix) = false;

    // ROOT_ADMIN defines the root admin role index.
    ROOT_ADMIN = 0 [(gogoproto.enumvalue_customname) = "RoleRootAdmin"];
    // PERM_ADMIN defines the permission admin role index.
    PERM_ADMIN = 1 [(gogoproto.enumvalue_customname) = "RolePermAdmin"];
    // BLACKLIST_ADMIN defines the blacklist admin role index.
    BLACKLIST_ADMIN = 2 [(gogoproto.enumvalue_customname) = "RoleBlacklistAdmin"];
    // NODE_ADMIN defines the validator node admin role index.
    NODE_ADMIN = 3 [(gogoproto.enumvalue_customname) = "RoleNodeAdmin"];
    // PARAM_ADMIN defines the param admin role index.
    PARAM_ADMIN = 4 [(gogoproto.enumvalue_customname) = "RoleParamAdmin"];
    // POWER_USER defines the power user role index.
    POWER_USER = 5 [(gogoproto.enumvalue_customname) = "RolePowerUser"];
    // RELAYER_USER defines the relayer role index.
    RELAYER_USER = 6 [(gogoproto.enumvalue_customname) = "RoleRelayerUser"];
    // IDAdmin defines the identity role index.
    ID_ADMIN = 7 [(gogoproto.enumvalue_customname) = "RoleIDAdmin"];
}
