syntax = "proto3";
package irismod.service;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/irita-sdk-go/modules/service";
option (gogoproto.goproto_getters_all) = false;

// MsgDefineService defines an SDK message for defining a new service.
message MsgDefineService {
    string name = 1;
    string description = 2;
    repeated string tags = 3;
    string author = 4;
    string author_description = 5 [(gogoproto.moretags) = "yaml:\"author_description\""];
    string schemas = 6;
}

// MsgBindService defines an SDK message for binding to an existing service.
message MsgBindService {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    string provider = 2;
    repeated cosmos.base.v1beta1.Coin deposit = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/bianjieai/irita-sdk-go/types.Coins"];
    string pricing = 4;
    uint64 qos = 5 [(gogoproto.customname) = "QoS"];
    string options = 6;
    string owner = 7;
}

// MsgUpdateServiceBinding defines an SDK message for updating an existing service binding.
message MsgUpdateServiceBinding {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    string provider = 2;
    repeated cosmos.base.v1beta1.Coin deposit = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/bianjieai/irita-sdk-go/types.Coins"];
    string pricing = 4;
    uint64 qos = 5 [(gogoproto.customname) = "QoS"];
    string options = 6;
    string owner = 7;
}

// MsgSetWithdrawAddress defines an SDK message to set the withdrawal address for a provider.
message MsgSetWithdrawAddress {
    string owner = 1;
    string withdraw_address = 2 [(gogoproto.moretags) = "yaml:\"withdraw_address\""];
}

// MsgDisableServiceBinding defines an SDK message to disable a service binding.
message MsgDisableServiceBinding {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    string provider = 2;
    string owner = 3;
}

// MsgEnableServiceBinding defines an SDK message to enable a service binding.
message MsgEnableServiceBinding {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    string provider = 2;
    repeated cosmos.base.v1beta1.Coin deposit = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/bianjieai/irita-sdk-go/types.Coins"];
    string owner = 4;
}

// MsgRefundServiceDeposit defines an SDK message to refund deposit from a service binding.
message MsgRefundServiceDeposit {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    string provider = 2;
    string owner = 3;
}

// MsgCallService defines an SDK message to initiate a service request context.
message MsgCallService {
    string service_name = 1 [(gogoproto.moretags) = "yaml:\"service_name\""];
    repeated string providers = 2;
    string consumer = 3;
    string input = 4;
    repeated cosmos.base.v1beta1.Coin service_fee_cap = 5 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/bianjieai/irita-sdk-go/types.Coins", (gogoproto.moretags) = "yaml:\"service_fee_cap\""];
    int64 timeout = 6;
    bool super_mode = 7 [(gogoproto.moretags) = "yaml:\"super_mode\""];
    bool repeated = 8;
    uint64 repeated_frequency = 9 [(gogoproto.moretags) = "yaml:\"repeated_frequency\""];
    int64 repeated_total = 10 [(gogoproto.moretags) = "yaml:\"repeated_total\""];
}

// MsgCallServiceResponse defines the Msg/CallService response type.
message MsgCallServiceResponse {
    string request_context_id = 1 [(gogoproto.moretags) = "yaml:\"request_context_id\""];
}

// MsgRespondService defines an SDK message to respond a service request.
message MsgRespondService {
    string request_id = 1 [(gogoproto.moretags) = "yaml:\"request_id\""];
    string provider = 2;
    string result = 3;
    string output = 4;
}

// MsgPauseRequestContext defines an SDK message to pause a service request.
message MsgPauseRequestContext {
    string request_context_id = 1 [(gogoproto.moretags) = "yaml:\"request_context_id\""];
    string consumer = 2;
}

// MsgStartRequestContext defines an SDK message to resume a service request.
message MsgStartRequestContext {
    string request_context_id = 1 [(gogoproto.moretags) = "yaml:\"request_context_id\""];
    string consumer = 2;
}

// MsgKillRequestContext defines an SDK message to terminate a service request.
message MsgKillRequestContext {
    string request_context_id = 1 [(gogoproto.moretags) = "yaml:\"request_context_id\""];
    string consumer = 2;
}

// MsgUpdateRequestContext defines an SDK message to update a service request context.
message MsgUpdateRequestContext {
    string request_context_id = 1 [(gogoproto.moretags) = "yaml:\"request_context_id\""];
    repeated string providers = 2;
    string consumer = 3;
    repeated cosmos.base.v1beta1.Coin service_fee_cap = 4 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/bianjieai/irita-sdk-go/types.Coins", (gogoproto.moretags) = "yaml:\"service_fee_cap\""];
    int64 timeout = 5;
    uint64 repeated_frequency = 6 [(gogoproto.moretags) = "yaml:\"repeated_frequency\""];
    int64 repeated_total = 7 [(gogoproto.moretags) = "yaml:\"repeated_total\""];
}

// MsgWithdrawEarnedFees defines an SDK message to withdraw the fees earned by the provider or owner.
message MsgWithdrawEarnedFees {
    string owner = 1;
    string provider = 2;
}