syntax = "proto3";
package cschain.modules.admin;

import "third_party/proto/gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/irita-sdk-go/modules/admin";

option (gogoproto.goproto_getters_all) = false;

// MsgAddRoles defines an SDK message for adding roles to a address.
message MsgAddRoles {
    option (gogoproto.equal) = true;

    bytes address = 1 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
    repeated Role roles = 2;
    bytes operator = 3 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
}

// MsgRemoveRoles defines an SDK message for removing roles from an existing address.
message MsgRemoveRoles {
    option (gogoproto.equal) = true;

    bytes address = 1 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
    repeated Role roles = 2;
    bytes operator = 3 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
}

// MsgBlockAccount defines an SDK message for blocking an account.
message MsgBlockAccount {
    option (gogoproto.equal) = true;

    bytes address = 1 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
    bytes operator = 2 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
}

// MsgUnblockAccount defines an SDK message for unblocking an account.
message MsgUnblockAccount {
    option (gogoproto.equal) = true;

    bytes address = 1 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
    bytes operator = 2 [(gogoproto.casttype) = "github.com/bianjieai/irita-sdk-go/types.AccAddress"];
}

// Role is a type alias that represents a proposal status as a byte
enum Role {
    option (gogoproto.enum_stringer) = false;
    option (gogoproto.goproto_enum_stringer) = false;
    option (gogoproto.goproto_enum_prefix) = false;

    // ROLE_ROOT_ADMIN defines the root admin role index.
    ROLE_ROOT_ADMIN = 0 [(gogoproto.enumvalue_customname) = "RoleRootAdmin"];
    // ROLE_PERM_ADMIN defines the permission admin role index.
    ROLE_PERM_ADMIN = 1 [(gogoproto.enumvalue_customname) = "RolePermAdmin"];
    // ROLE_BLACKLIST_ADMIN defines the blacklist admin role index.
    ROLE_BLACKLIST_ADMIN = 2 [(gogoproto.enumvalue_customname) = "RoleBlacklistAdmin"];
    // ROLE_NODE_ADMIN defines the validator node admin role index.
    ROLE_NODE_ADMIN = 3 [(gogoproto.enumvalue_customname) = "RoleNodeAdmin"];
    // ROLE_PARAM_ADMIN defines the param admin role index.
    ROLE_PARAM_ADMIN = 4 [(gogoproto.enumvalue_customname) = "RoleParamAdmin"];
    // ROLE_POWER_USER defines the power user role index.
    ROLE_POWER_USER = 5 [(gogoproto.enumvalue_customname) = "RolePowerUser"];
    // ROLE_RELAYER_USER defines the relayer role index.
    ROLE_RELAYER_USER = 6 [(gogoproto.enumvalue_customname) = "RoleRelayerUser"];
    // ROLE_IDAdmin defines the identity role index.
    ROLE_ID_ADMIN = 7 [(gogoproto.enumvalue_customname) = "RoleIDAdmin"];
}

